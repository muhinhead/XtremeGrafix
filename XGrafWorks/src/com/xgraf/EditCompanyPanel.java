// Generated by com.nm.GridEditGenerator at Mon Aug 31 18:35:20 EEST 2015
// generated file, so all hand editions will be overwritten
package com.xgraf;

import com.xgraf.RecordEditPanel;
import com.xgraf.orm.Company;
import com.xgraf.orm.dbobject.DbObject;
import com.xlend.util.Java2sAutoComboBox;
import java.awt.BorderLayout;
import java.rmi.RemoteException;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

public class EditCompanyPanel extends RecordEditPanel {

//column: company_id type: INT class: java.lang.Integer
    private JTextField idField;
//column: name type: VARCHAR class: java.lang.String
    private Java2sAutoComboBox companyNameCB;
    private Java2sAutoComboBox tradingAsCB;
//column: street type: VARCHAR class: java.lang.String
    private Java2sAutoComboBox streetCB;
//column: area_pobox type: VARCHAR class: java.lang.String
    private Java2sAutoComboBox areaPoboxCB;
//column: city type: VARCHAR class: java.lang.String
    private Java2sAutoComboBox cityCB;
//column: postcode type: VARCHAR class: java.lang.String
    private JTextField postcodeField;
//column: reg_no type: VARCHAR class: java.lang.String
    private JTextField regNoField;
//column: vat_no type: VARCHAR class: java.lang.String
    private JTextField vatNoField;
//column: comments type: VARCHAR class: java.lang.String
    private JTextArea commentsField;

    public EditCompanyPanel(DbObject dbObject) {
        super(dbObject);
    }

    @Override
    protected void fillContent() {
        String[] titles = {
            "ID:",
            "Company Name:",
            "Trading as:",
            "Address:",
            "Area / PO Box:",
            "City:", //"Code:"
            "Company Reg.No:" //"Company VAT No:"
        };
        JComponent[] edits = new JComponent[]{
            getGridPanel(idField = new JTextField(), 4),
            companyNameCB = new Java2sAutoComboBox(XGrafWorks.loadDistinct("company", "name")),
            tradingAsCB = new Java2sAutoComboBox(XGrafWorks.loadDistinct("company", "trading_as")),
            streetCB = new Java2sAutoComboBox(XGrafWorks.loadDistinct("company", "street")),
            getGridPanel(areaPoboxCB = new Java2sAutoComboBox(XGrafWorks.loadDistinct("company", "area_pobox")), 2),
            getGridPanel(new JComponent[]{
                cityCB = new Java2sAutoComboBox(XGrafWorks.loadDistinct("company", "city")),
                getGridPanel(new JComponent[]{
                    new JLabel("Code:", SwingConstants.RIGHT),
                    postcodeField = new JTextField(12)
                })
            }),
            getBorderPanel(new JComponent[]{
                regNoField = new JTextField(30),
                new JLabel("Company VAT No:", SwingConstants.RIGHT),
                vatNoField = new JTextField(30)
            })
        };
        idField.setEnabled(false);
        for (Java2sAutoComboBox acb : new Java2sAutoComboBox[]{
            cityCB, streetCB, areaPoboxCB, companyNameCB, tradingAsCB
        }) {
            acb.setEditable(true);
            acb.setStrict(false);
        }
        organizePanels(titles, edits, null);

        MyJideTabbedPane detailsTab = new MyJideTabbedPane();
        JScrollPane sp;
        detailsTab.add(sp = new JScrollPane(commentsField = new JTextArea(6, 50),
                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER), "Comments");
        Company comp = (Company) getDbObject();
        if(comp != null) {
            int company_id = comp.getCompanyId();
            try {
                detailsTab.add(new ContactGrid(XGrafWorks.getExchanger(), comp.getCompanyId()), "Contacts");
                detailsTab.add(new QuoteGrid(XGrafWorks.getExchanger(),company_id), "Quotes");
                detailsTab.add(new ProFormaInvoiceGrid(XGrafWorks.getExchanger(),company_id), "Pro-Forma Invoices");
                detailsTab.add(new InvoiceGrid(XGrafWorks.getExchanger(),company_id), "Tax Invoices");
            } catch (RemoteException ex) {
                XGrafWorks.logAndShowMessage(ex);
            }
        }
        add(detailsTab, BorderLayout.CENTER);
    }

    @Override
    public void loadData() {
        Company comp = (Company) getDbObject();
        if (comp != null) {
            idField.setText(comp.getCompanyId().toString());
            companyNameCB.setSelectedItem(comp.getName());
            tradingAsCB.setSelectedItem(comp.getTradingAs());
            streetCB.setSelectedItem(comp.getStreet());
            areaPoboxCB.setSelectedItem(comp.getAreaPobox());
            cityCB.setSelectedItem(comp.getCity());
            postcodeField.setText(comp.getPostcode());
            regNoField.setText(comp.getRegNo());
            vatNoField.setText(comp.getVatNo());
            commentsField.setText(comp.getComments());
//            imageData = (byte[]) comp.getLogo();
//            setImage(imageData);
        }
//        setEnabledPictureControl(true);
    }

    @Override
    public boolean save() throws Exception {
        Company comp = (Company) getDbObject();
        boolean isNew = comp == null;
        if (isNew) {
            comp = new Company(null);
            comp.setCompanyId(0);
        }
        comp.setName((String) companyNameCB.getSelectedItem());
        comp.setTradingAs((String)tradingAsCB.getSelectedItem());
        comp.setStreet((String) streetCB.getSelectedItem());
        comp.setPostcode(postcodeField.getText());
        comp.setAreaPobox((String) areaPoboxCB.getSelectedItem());
        comp.setCity((String) cityCB.getSelectedItem());
        comp.setComments(commentsField.getText());
        comp.setRegNo(regNoField.getText());
        comp.setVatNo(vatNoField.getText());
//        comp.setLogo(imageData);
        return saveDbRecord(comp, isNew);
    }

//    @Override
//    protected String getImagePanelLabel() {
//        return "Logo";
//    }
}
